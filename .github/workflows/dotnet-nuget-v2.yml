name: NuGet v2 test (push & pull)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
permissions:
  contents: read
  id-token: write    # OIDC for Cloudsmith

env:
  CS_ORG:   globex-innovations
  CS_REPO:  acme-nonprod
  SERVICE:  ci_acme_service
  PACKAGE_ID: MyProject

  # ───── pick ONE of the next two lines ─────
  PACKAGE_VER: 1.0.0-CSTEST-${{ github.run_number }}   # ← repro mixed-case bug
  #PACKAGE_VER: 1.0.0-ci.23                            # ← package already in repo

jobs:
# ────────────────────────────────────────────────────────────────
# 1) Build & PUSH the package via /v2/ (Ubuntu)
# ────────────────────────────────────────────────────────────────
  push-v2:
    runs-on: ubuntu-latest
    outputs:
      pkg_version: ${{ steps.pack.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      - name: Authenticate (OIDC)
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.2
        with:
          oidc-namespace:   ${{ env.CS_ORG }}
          oidc-service-slug: ${{ env.SERVICE }}
          oidc-auth-only:   true      # sets $CLOUDSMITH_API_KEY

      - uses: actions/setup-dotnet@v3
        with: { dotnet-version: '7.0.x' }

      # overwrite/refresh the dummy project
      - name: Create / clean dummy lib
        run: |
          dotnet new classlib -n ${{ env.PACKAGE_ID }} --force
          rm -f ${{ env.PACKAGE_ID }}/Program.cs   # remove console stub if present

      - name: Pack
        id: pack
        run: |
          dotnet pack "${{ env.PACKAGE_ID }}/${{ env.PACKAGE_ID }}.csproj" \
            -p:PackageVersion="${{ env.PACKAGE_VER }}" \
            --output ./out
          echo "version=${{ env.PACKAGE_VER }}" >> "$GITHUB_OUTPUT"

      - name: Push via /v2/   # skips dupes, never fails
        continue-on-error: true
        run: |
          dotnet nuget push ./out/*.nupkg \
            --api-key "$CLOUDSMITH_API_KEY" \
            --source "https://nuget.cloudsmith.io/${{ env.CS_ORG }}/${{ env.CS_REPO }}/v2/" \
            --skip-duplicate

# ────────────────────────────────────────────────────────────────
# 2) INSTALL the same package via /v2/ (Windows)
# ────────────────────────────────────────────────────────────────
  pull-v2:
    needs: push-v2
    runs-on: windows-latest
    env:
      PACKAGE_VER: ${{ needs.push-v2.outputs.pkg_version }}

    steps:
      - name: Authenticate (OIDC)
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.2
        with:
          oidc-namespace:   ${{ env.CS_ORG }}
          oidc-service-slug: ${{ env.SERVICE }}
          oidc-auth-only:   true

      - name: Add Cloudsmith v2 source
        shell: pwsh
        run: |
          nuget.exe sources Add `
            -Name CloudsmithV2 `
            -Source "https://nuget.cloudsmith.io/${Env:CS_ORG}/${Env:CS_REPO}/v2/" `
            -Username token `
            -Password "$Env:CLOUDSMITH_API_KEY" `
            -StorePasswordInClearText

      - name: Clear cache
        shell: pwsh
        run: nuget.exe locals all -clear

      - name: Install via /v2/
        shell: pwsh
        run: |
          nuget.exe install $Env:PACKAGE_ID `
            -Version $Env:PACKAGE_VER `
            -Source CloudsmithV2 `
            -OutputDirectory .\packages `
            -Verbosity detailed
